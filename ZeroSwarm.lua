
-- —тандартный "типо-класс"
swarm = {}
swarm.__index = swarm


------------------------------
-- ‘ункции, вызываемые снаружи
------------------------------

-- ¬ызываетс€ по стандарту на всех запущенных черепашках
-- ∆дет броадкаста от ведущей черепашки и по получению сигнала посылает
-- в реднет ведущему рассто€ние до себ€ и свои параметры вроде имени.
-- ‘ункци€ возвращает рассто€ние до себ€, которое по сути €вл€етс€ ее
-- номером в р€ду черепашек.
function swarm.searchOwner()
  
  -- [...]
  
  return distanceFromOwner
end


-- ¬ызываетс€ из ведомой.
-- Ёта функци€ будет запускатьс€ после того как черепашка определила себ€
-- как ведомую. ƒалее она будет вызыватьс€ снова дл€ получени€ новых команд,
-- если они необходимы.
-- ‘ункци€ возвращает полученную команду ввиде строки
function swarm.waitOrders()
  
  -- [...]
  
  return orderString
end


-- ¬ызываетс€ из ведущей. ѕосылает бродкаст и ждет ответов.
-- Ќаходит всех черепашек, сто€щих р€дом с вызывающей этот метод черепашкой.
-- waitingResponceTime - указывает как долго ждать ответа от ведомых
-- ¬озвращает количество найденых ведомых черепах
function swarm.findSlaves(waitingResponceTime)

  -- [...]
  
  return slavesCount
end


-- ¬ызываетс€ из ведущей. ѕередает на ведомую черепашку сообщение
-- turtleNumber - номер черепашки по счету, начина€ с "1"
-- taskString   - €вл€етс€ строкой, которую нужно передать
function swarm.transmitTask(turtleNumber, taskString)
  
  -- [...]
  
end

-- ¬ызываетс€ из ведомых после получени€ задани€ на строительство, если
-- черепашка не может начать работу. Ёто может произойти, например,
-- если черепашке не хватает топлива дл€ выполнени€ задани€.
-- Ёто необходимо, что бы вс€ группа не начинала работу, если кака€ то
-- черепашка не может этого сделать.
function swarm.transmitError(errorString)
  
  -- [...]

end